#!/usr/bin/python3

import subprocess
print('''>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    .o oOOOOOOOo                                            OOOo          
    Ob.OOOOOOOo  OOOo.      oOOo.                      .adOOOOOOO          
    OboO"""""""""""".OOo. .oOOOOOo.    OOOo.oOOOOOo.."""""""""'OO
    OOP.oOOOOOOOOOOO "POOOOOOOOOOOo.   `"OOOOOOOOOP,OOOOOOOOOOOB'
    `O'OOOO'     `OOOOo"OOOOOOOOOOO` .adOOOOOOOOO"oOOO'    `OOOOo
    .OOOO'            `OOOOOOOOOOOOOOOOOOOOOOOOOO'            `OO
    OOOOO                 '"OOOOOOOOOOOOOOOO"`                oOO
   oOOOOOba.                .adOOOOOOOOOOba               .adOOOOo.
  oOOOOOOOOOOOOOba.    .adOOOOOOOOOO@^OOOOOOOba.     .adOOOOOOOOOOOO
 OOOOOOOOOOOOOOOOO.OOOOOOOOOOOOOO"`  '"OOOOOOOOOOOOO.OOOOOOOOOOOOOO
 "OOOO"       "YOoOOOOMOIONODOO"`  .   '"OOROAOPOEOOOoOY"     "OOO"
    Y           'OOOOOOOOOOOOOO: .oOOo. :OOOOOOOOOOO?'         :`
    :            .oO%OOOOOOOOOOo.OOOOOO.oOOOOOOOOOOOO?         .
    .            oOOP"%OOOOOOOOoOOOOOOO?oOOOOO?OOOO"OOo
                 '  OOOO"%OOOO%"%OOOOO"OOOOOO"OOO':
                      `$"  `OOOO' `O"Y ' `OOOO'  o             .
    .                  .     OP"          : o     .

version : 1.0

Support us in Youtube:https://youtube.com/channel/UC9NqrCKPB2M6mvZonD-FrLg
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
''')
devices = subprocess.run(
    "adb devices | awk {'print $1'} | grep -v -E 'List'", capture_output=True, shell=True, text=True)
ip = str(devices.stdout).split("\n")
wifi, serials = [], []
for x in ip:
    if x == "":
        pass
    else:
        if "." in x:
            wifi.append(x)
        else:
            serials.append(x)
a = subprocess.run(
    "adb devices -l | grep -v ^$ | awk {'if(NR>1) print $0'}", shell=True, capture_output=True)
print(a.stdout.decode(), end="")
print()
ID = input("Enter the ip address( public or private )  or serial number :")
while True:
    print('''\n
    NOTE "*": advanced command are hidding inside it
    press 1  to install the apk in mobile
    press 2  to uninstall the app from the mobile
    press 3  to see installed application
    press 4  to connect USB devices to wireless tcp
    press 5  to see packages file path where the apk is present
    press 6  to reboot the devices
    press 7  to see assigned IP Address
    press 8  to kill the ADB server
    press 9  to start the ADB server
    press 10 to see the android version
    press 11 to send file from local machine to android device
    press 12 to send file from android device to local machine
    press 13 to clear all data of the application
    press 14 to hide an application
    press 15 to unhide an application
    press 16 to open the shell
    press 17 to uninstall the system apps
    press 18 to know about the battery details *
    press 19 to backup the apk
    press 20 to poweroff the devices
    press 21 to show real time log of device
    press 22 to open an application using ADB
    press 23 to see netwok adaptor information
    press 24 to see Sockets information *
    press 25 to see total incoming and outgoing bytes in wifi
    press 26 to Turn off/on the wifi
    press 27 to get current activity
    press 28 to see installed third-party apps
    press 29 to see installed package_name and apk path
    press 30 to see installed system apps
    press 31 to see the windows size *
    press 32 to see the windows density *
    press 33 to backup the apps *
    press 34 to restore the backup file
    press 35 to Disable the application
    press 36 to Enable the application''')
    Index_adb = input(">>> ")
    subprocess.run("clear", shell=True)
    if Index_adb == "1":
        subprocess.run("adb -s {0} install {1}".format(ID,
                    input("Enter the path where the apk is present :")), shell=True)

    elif Index_adb == "2":
        subprocess.run("adb -s {0} uninstall {1}".format(ID,
                    input("Enter the package name :")), shell=True)

    elif Index_adb == "3":
        subprocess.run("adb -s {0} shell pm list packages".format(ID), shell=True)

    elif Index_adb == "4":
        subprocess.run("adb -s {0} tcpip 5555".format(ID), shell=True)
        print("To check the IP rerun this program and press 2")

    elif Index_adb == "5":
        subprocess.run(
            "adb -s {0} shell pm list packages -f".format(ID), shell=True)

    elif Index_adb == "6":
        subprocess.run("adb -s {0} shell reboot".format(ID), shell=True)

    elif Index_adb == "7":
        subprocess.run(
            "adb -s {0} shell ip -f inet addr show | grep inet | cut -d' ' -f6 | cut -d '/' -f 1".format(ID), shell=True)

    elif Index_adb == "8":
        subprocess.run("adb kill-server", shell=True)

    elif Index_adb == "9":
        subprocess.run("adb start-server", shell=True)

    elif Index_adb == "10":
        subprocess.run(
            "adb -s {0} shell getprop ro.build.version.release".format(ID), shell=True)

    elif Index_adb == "11":
        print("Note : '\\' not present in source path, If the destination path is not set it takes /sdcard as default")
        source_path = input("Enter the source path :")
        destination_path = input("Enter the destination path :")
        if destination_path == "":
            destination_path = "/sdcard"
        subprocess.run("adb -s {0} push {1} {2}".format(ID,
                    source_path, destination_path), shell=True)

    elif Index_adb == "12":
        print("Note : '\\' not present in destination path, If the destination path is not set it takes download folder as default")
        source_path = input("Enter the source path :")
        destination_path = input("Enter the destination path :")
        if destination_path == "":
            destination_path = "~/Downloads"
        subprocess.run("adb -s {0} pull {1} {2}".format(ID,
                    source_path, destination_path), shell=True)
        whoami = str(subprocess.run("whoami", shell=True,
                    capture_output=True, text=True).stdout).split("\n")[0]
        print("File is located in this path /home/{0}/Downloads".format(whoami))

    elif Index_adb == "13":
        subprocess.run(
            "adb -s {0} shell pm clear {1}".format(ID, input("Enter the package name :")), shell=True)

    elif Index_adb == "14":
        subprocess.run("adb -s {0} shell pm hide {1}".format(ID,
                    input("Enter the package name :")), shell=True)

    elif Index_adb == "15":
        subprocess.run("adb -s {0} shell pm unhide {1}".format(ID,
                    input("Enter the package name :")), shell=True)

    elif Index_adb == "16":
        subprocess.run("adb -s {0} shell".format(ID), shell=True)

    elif Index_adb == "17":
        print('''Try this in own risk, we are not responsible for your activity
        This only uninstall for the current user. If you reset mobile it will restore to your devices...,''')
        subprocess.run("adb -s {0} shell pm uninstall -k --user 0 {1}".format(
            ID, input("Enter the package name :")), shell=True)
        value = input(
            '''to reinstall the uninstalled app press "yes" and "no to exit"''')
        if value == "yes":
            subprocess.run("adb -s {0} shell cmd package install-existing {1}".format(
                ID, input("Enter the package name :")), shell=True)
            del value
        elif value == "no":
            del value
            exit(0)
    elif Index_adb == "18":
        subprocess.run("adb -s {0} shell dumpsys battery".format(ID), shell=True)
        value = input(
            '''To enter in to the Bonous command press "yes" to exit press "no"''')
        if value == "yes":
            print('''Here you are enter into the advanced battery setiing here you can change the battery status and
            Battery level, charging, discharging status
            ''')
            print()
            print('''press 1 to change the battery level range(0-100)
            press 2 to change the AC charging "on"
            press 3 to change the AC charging "off"
            press 4 to change the USB charging "on"
            press 5 to change the USB charging "off"
            press 6 to reset all above settings
            To learn more command see :https://www.youtube.com/watch?v=A1Rc9PJkiL8''')
            battery_state = input(">>> ")
            if battery_state == "1":
                subprocess.run("adb -s {0} dumpsys battery set level {1}".format(
                    ID, input("Enter the value to set the battery percentage :")), shell=True)
            elif battery_state == "2":
                subprocess.run(
                    "adb -s {0} dumpsys battery set ac 1".format(ID), shell=True)
            elif battery_state == "3":
                subprocess.run(
                    "adb -s {0} dumpsys battery set ac 0".format(ID), shell=True)
            elif battery_state == "4":
                subprocess.run(
                    "adb -s {0} dumpsys battery set usb 1".format(ID), shell=True)
            elif battery_state == "5":
                subprocess.run(
                    "adb -s {0} dumpsys battery set usb 0".format(ID), shell=True)
            elif battery_state == "6":
                subprocess.run(
                    "adb -s {0} dumpsys battery reset".format(ID), shell=True)

    elif Index_adb == "19":
        print('''By default the apk will copy to the Downloads folder''')
        temp = str(subprocess.run("adb -s {0} shell pm path {1}".format(ID, input(
            "Enter the package name :")), shell=True, capture_output=True, text=True).stdout).split("\n")[0]
        subprocess.run("adb pull {0} ~/Downloads", shell=True)
        whoami = str(subprocess.run("whoami", shell=True,
                    capture_output=True, text=True).stdout).split("\n")[0]
        print("File is located in this path /home/{0}/Downloads".format(whoami))

    elif Index_adb == "20":
        subprocess.run("adb -s {0} shell poweroff".format(ID), shell=True)
        print("success")

    elif Index_adb == "21":
        subprocess.run("adb -s {0} logcat".format(ID), shell=True)

    elif Index_adb == "22":
        subprocess.run("adb -s {0} shell monkey -p {1} -v 500".format(ID,
                    input("Enter the package name :")), shell=True)

    elif Index_adb == "23":
        subprocess.run("adb -s {0} shell ifconfig".format(ID), shell=True)

    elif Index_adb == "24":
        subprocess.run("adb -s {0} shell netstat")

        if input('To see advanced command press "yes" and "no" to exit') == "yes":
            print('''press 1 to see TCP sockets
            press 2 to see UDP sockets
            press 3 to see RAW sockets
            press 4 to see unix sockets
            press 5 to see PID/program_name of sockets
            To learn more command see :https://www.youtube.com/watch?v=_7CFKmOx2wE''')
            Value = input(">>> ")

            if Value == "1":
                subprocess.run(
                    "adb -s {0} shell netstat -t".format(ID), shell=True)

            elif Value == "2":
                subprocess.run(
                    "adb -s {0} shell netstat -u".format(ID), shell=True)

            elif Value == "3":
                subprocess.run(
                    "adb -s {0} shell netstat -w".format(ID), shell=True)

            elif Value == "4":
                subprocess.run(
                    "adb -s {0} shell netstat -x".format(ID), shell=True)

            elif Value == "5":
                subprocess.run(
                    "adb -s {0} shell netstat -p".format(ID), shell=True)

    elif Index_adb == "25":
        subprocess.run(
            "adb -s {0} shell ifconfig | grep wlan0 -A 8 | grep 'RX bytes' |cut -d " " -f 11-14".format(ID), shell=True)

    elif Index_adb == "26":
        key = input('''To turn on press 1 and to turn off press 2
        >>> ''')
        if key == "1":
            subprocess.run(
                "adb -s {0} shell svc wifi enable".format(ID), shell=True)
            del key
        elif key == "2":
            subprocess.run(
                "adb -s {0} shell svc wifi disable".format(ID), shell=True)
            del key

    elif Index_adb == "27":
        subprocess.run("adb -s {0} shell dumpsys activity".format(ID), shell=True)

    elif Index_adb == "28":
        subprocess.run("adb -s {0} shell pm packages -3".format(ID), shell=True)

    elif Index_adb == "29":
        subprocess.run("adb -s {0} shell pm packages -f".format(ID), shell=True)

    elif Index_adb == "30":
        subprocess.run("adb -s {0} shell pm packages -s".format(ID), shell=True)

    elif Index_adb == "31":
        subprocess.run("adb -s {0} shell wm size".format(ID), shell=True)

        if input("To eneter into the advanced option type yes and hit enter :") == "yes":
            subprocess.run("clear", shell=True)
            option = input('''press 1 to resize the windows of the mobile eg:1920x1080
            press 2 to reset the windows size
            To learn more command see :https://www.youtube.com/watch?v=_7CFKmOx2wE
            >>> ''')

            if option == "1":
                subprocess.run(
                    "adb -s {0} shell wm size {1}".format(ID, input("Enter the window size :")))
                del option
            else:
                subprocess.run(
                    "adb -s {0} shell wm size reset".format(ID), shell=True)
        else:
            exit(0)

    elif Index_adb == "32":
        subprocess.run("adb -s {0} shell wm density")

        if input("To enter into the advanced option type yes and hit enter :") == "yes":
            subprocess.run("clear", shell=True)
            option = input('''Note :If you increase the value the icon get large,if it small icon gets smaller eg:70-600
            press 1 to change wm of the mobile
            press 2 to change to reset
            To learn more command see :https://www.youtube.com/watch?v=_7CFKmOx2wE
            >>> ''')

            if option == "1":
                subprocess.run("adb -s {0} shell wm size {1}".format(ID,
                            input("Enter the size in decimal :")), shell=True)
                del option
            else:
                exit(0)

    elif Index_adb == "33":
        print("NOTE :some application may not backup the application data")
        subprocess.run("adb -s {0} backup {1}".format(ID,
                    input("Enter the package name :")), shell=True)

        if input("To enter into the advanced option type yes and hit enter :") == "yes":
            subprocess.run("clear", shell=True)
            option = input('''press 1 to backup all system and 3rd party apps apk
            press 2 to backup system apps apk
            press 3 to backup other than system apps apks
            press 4 to backup without apks
            press 5 to backup shared memory
            To learn more command see :https://youtu.be/2ZuO_cuRrGs
            >>> ''')
            if option == "1":
                subprocess.run("adb -s {0} -all -apk -f ~/Downloads/{1}".format(
                    ID, input("Enter the filename.backup eg:navy.backup :")), shell=True)
                del option
                whoami = str(subprocess.run("whoami", shell=True,
                            capture_output=True, text=True).stdout).split("\n")[0]
                print(
                    "File is located in this path /home/{0}/Downloads".format(whoami))

            elif option == "2":
                subprocess.run("adb -s {0} -system -apk -f ~/Downloads/{1}".format(
                    ID, input("Enter the filename.backup eg:navy.backup :")), shell=True)
                del option
                whoami = str(subprocess.run("whoami", shell=True,
                            capture_output=True, text=True).stdout).split("\n")[0]
                print(
                    "File is located in this path /home/{0}/Downloads".format(whoami))

            elif option == "3":
                subprocess.run("adb -s {0} -nosystem -apk -f ~/Downloads/{1}".format(
                    ID, input("Enter the filename.backup eg:navy.backup :")), shell=True)
                del option
                whoami = str(subprocess.run("whoami", shell=True,
                            capture_output=True, text=True).stdout).split("\n")[0]
                print(
                    "File is located in this path /home/{0}/Downloads".format(whoami))

            elif option == "4":
                subprocess.run("adb -s {0} -all -nosystem -f ~/Downloads/{1}".format(
                    ID, input("Enter the filename.backup eg:navy.backup :")), shell=True)
                del option
                whoami = str(subprocess.run("whoami", shell=True,
                            capture_output=True, text=True).stdout).split("\n")[0]
                print(
                    "File is located in this path /home/{0}/Downloads".format(whoami))

            elif option == "5":
                subprocess.run("adb -s {0} -apk -shared -system -f ~/Downloads/{1}".format(
                    ID, input("Enter the filename.backup eg:navy.backup :")), shell=True)
                del option
                whoami = str(subprocess.run("whoami", shell=True,
                            capture_output=True, text=True).stdout).split("\n")[0]
                print(
                    "File is located in this path /home/{0}/Downloads".format(whoami))

        else:
            exit(0)

    elif Index_adb == "34":
        subprocess.run("adb -s {0} restore {1}".format(ID,
                    input("Enter the file path :")), shell=True)

    elif Index_adb == "35":
        print("Note: This command only disable app in current user, If you reset the device it will enable by Default>>>\n")
        subprocess.run("adb -s {0} shell pm disbale-user --user 0 {1}".format(
            ID, input("Enter the Package Name :")), shell=True)
        if input("To show disbaled apps List ,press y to see n to no") == "y":
            subprocess.run(
                "adb -s {0} shell pm list packages -d".format(ID), shell=True)

    elif Index_adb == "36":
        print("Note: This command only Enable app in current user>>>\n")
        subprocess.run("adb -s {0} shell pm enbale-user --user 0 {1}".format(
            ID, input("Enter the Package Name :")), shell=True)

